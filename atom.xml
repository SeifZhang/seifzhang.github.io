<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SeifZhang&#39;s Blog</title>
  <subtitle>A girl，just a simple girl!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://seifzhang.jerrychia.com/"/>
  <updated>2016-06-16T02:54:45.182Z</updated>
  <id>http://seifzhang.jerrychia.com/</id>
  
  <author>
    <name>SeifZhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>16端午-我的记忆</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/16/dairy2/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/16/dairy2/</id>
    <published>2016-06-16T02:29:20.602Z</published>
    <updated>2016-06-16T02:54:45.182Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;我的端午之行&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/1.jpg&quot; alt=&quot;烤冷面&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/2.jpg&quot; alt=&quot;三个人吃5份&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/3.jpg&quot; alt=&quot;等烤冷面&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/4.jpg&quot; alt=&quot;吃着呢&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/5.jpg&quot; alt=&quot;做着呢&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/6.jpg&quot; alt=&quot;麻辣烫&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/7.jpg&quot; alt=&quot;麻辣烫和面&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/8.jpg&quot; alt=&quot;就想吃烤冷面&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/9.jpg&quot; alt=&quot;三公寓合照&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/10.jpg&quot; alt=&quot;三公寓合照&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/11.jpg&quot; alt=&quot;校外&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/12.jpg&quot; alt=&quot;松辉市场&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/13.jpg&quot; alt=&quot;七教&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/14.jpg&quot; alt=&quot;五彩绳&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/15.jpg&quot; alt=&quot;五彩绳&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/16.jpg&quot; alt=&quot;普通话考试&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/17.jpg&quot; alt=&quot;顺便报个名&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/18.jpg&quot; alt=&quot;轻轨三号线&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/19.jpg&quot; alt=&quot;回校的动车，端午节几乎没人&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/20.jpg&quot; alt=&quot;第一次坐，就是快&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/21.jpg&quot; alt=&quot;韩国干脆面，也就那样&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/22.jpg&quot; alt=&quot;嗑瓜子呢&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/23.jpg&quot; alt=&quot;臭美呢&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/24.jpg&quot; alt=&quot;比较和谐&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/25.jpg&quot; alt=&quot;挡什么挡&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/26.jpg&quot; alt=&quot;沈阳北站&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/27.jpg&quot; alt=&quot;到学校了&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/28.jpg&quot; alt=&quot;大帅府的樱桃&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/29.jpg&quot; alt=&quot;把很短&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/30.jpg&quot; alt=&quot;大青楼&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/31.jpg&quot; alt=&quot;金鱼&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/32.jpg&quot; alt=&quot;金鱼，金鱼&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/33.jpg&quot; alt=&quot;金鱼，金鱼，金鱼&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/34.jpg&quot; alt=&quot;富丽&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/35.jpg&quot; alt=&quot;堂皇&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/36.jpg&quot; alt=&quot;周总理和张学良&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/37.jpg&quot; alt=&quot;都是假人，你信？&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/38.jpg&quot; alt=&quot;小时候用过&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/39.jpg&quot; alt=&quot;饿的时候对这个真的无感&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/40.jpg&quot; alt=&quot;国华烧烤&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/41.jpg&quot; alt=&quot;她俩&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/42.jpg&quot; alt=&quot;漫湖公园&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/43.jpg&quot; alt=&quot;轮滑&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/44.jpg&quot; alt=&quot;轮滑&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/45.jpg&quot; alt=&quot;小狗你看啥&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/46.jpg&quot; alt=&quot;美津火锅，赢了一瓶大雪碧&quot;&gt;&lt;br&gt;&lt;strong&gt;好吧，结束了。我好累，接下来要吃土了，哈哈&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;我的端午之行&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/duanwu/1.jpg&quot; alt=&quot;烤冷面&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerryc
    
    </summary>
    
      <category term="Diary" scheme="http://seifzhang.jerrychia.com/categories/Diary/"/>
    
    
      <category term="博客，文章" scheme="http://seifzhang.jerrychia.com/tags/%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>16端午-CCIT</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/13/dairy1/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/13/dairy1/</id>
    <published>2016-06-13T06:09:37.897Z</published>
    <updated>2016-06-16T02:51:42.297Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;学校&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/1.jpg&quot; alt=&quot;西门&quot; title=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/2.jpg&quot; alt=&quot;九教&quot; title=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/3.jpg&quot; alt=&quot;西区篮球场&quot; title=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/4.jpg&quot; alt=&quot;图书馆&quot; title=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/5.jpg&quot; alt=&quot;三号门&quot; title=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/6.jpg&quot; alt=&quot;远处的一教和工训&quot; title=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/7.jpg&quot; alt=&quot;一教&quot; title=&quot;6&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/8.jpg&quot; alt=&quot;小树林&quot; title=&quot;7&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/9.jpg&quot; alt=&quot;七教&quot; title=&quot;8&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/10.jpg&quot; alt=&quot;七教前的小路&quot; title=&quot;9&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/11.jpg&quot; alt=&quot;七教&quot; title=&quot;10&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/12.jpg&quot; alt=&quot;工训&quot; title=&quot;11&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/13.jpg&quot; alt=&quot;三教&quot; title=&quot;12&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/14.jpg&quot; alt=&quot;水房&quot; title=&quot;13&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/15.jpg&quot; alt=&quot;右边是食堂&quot; title=&quot;14&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/16.jpg&quot; alt=&quot;食堂里面&quot; title=&quot;15&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/17.jpg&quot; alt=&quot;一食堂&quot; title=&quot;16&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/18.jpg&quot; alt=&quot;三公寓&quot; title=&quot;17&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;学校&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://seifzhang.jerrychia.com/img/school/1.jpg&quot; alt=&quot;西门&quot; title=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://seifzhang.j
    
    </summary>
    
      <category term="Diary" scheme="http://seifzhang.jerrychia.com/categories/Diary/"/>
    
    
      <category term="博客，文章" scheme="http://seifzhang.jerrychia.com/tags/%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>Coding198_House_Robber</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-198/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-198/</id>
    <published>2016-06-05T02:54:59.000Z</published>
    <updated>2016-06-05T13:26:51.437Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and &lt;strong&gt;it will automatically contact the police if two adjacent houses were broken into on the same night&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight &lt;strong&gt;without alerting the police&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Dynamic Programming" scheme="http://seifzhang.jerrychia.com/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Coding191_Number_of_1_Bits</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-191/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-191/</id>
    <published>2016-06-05T02:52:59.000Z</published>
    <updated>2016-06-05T13:25:12.013Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Write a function that takes an unsigned integer and returns the number of ’1’ bits it has (also known as the Hamming weight).&lt;/p&gt;
&lt;p&gt;For example, the 32-bit integer ’11’ has binary representation 00000000000000000000000000001011, so the function should return 3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Bit Manipulation" scheme="http://seifzhang.jerrychia.com/tags/Bit-Manipulation/"/>
    
  </entry>
  
  <entry>
    <title>Coding190_Reverse_Bits</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-190/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-190/</id>
    <published>2016-06-05T02:50:59.000Z</published>
    <updated>2016-06-05T13:24:34.089Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Reverse bits of a given 32 bits unsigned integer.&lt;/p&gt;
&lt;p&gt;For example, given input 43261596 (represented in binary as &lt;strong&gt;00000010100101000001111010011100&lt;/strong&gt;), return 964176192 (represented in binary as &lt;strong&gt;00111001011110000010100101000000&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Follow up:&lt;/strong&gt;&lt;br&gt;If this function is called many times, how would you optimize it?&lt;/p&gt;
&lt;p&gt;Related problem: Reverse Integer&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;两数相加得一个特定数，返回两数的索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Bit Manipulation" scheme="http://seifzhang.jerrychia.com/tags/Bit-Manipulation/"/>
    
  </entry>
  
  <entry>
    <title>Coding189_Rotate_Array</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-189/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-189/</id>
    <published>2016-06-05T02:48:59.000Z</published>
    <updated>2016-06-05T13:22:48.401Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Rotate an array of n elements to the right by k steps.&lt;/p&gt;
&lt;p&gt;For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br&gt;Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;br&gt;Could you do it in-place with O(1) extra space?&lt;br&gt;Related problem: Reverse Words in a String II&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;两数相加得一个特定数，返回两数的索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Coding172_Factorial_Trailing_Zeroes</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-172/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-172/</id>
    <published>2016-06-05T02:46:59.000Z</published>
    <updated>2016-06-05T13:21:41.878Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Given an integer n, return the number of trailing zeroes in n!.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Your solution should be in logarithmic time complexity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Math" scheme="http://seifzhang.jerrychia.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Coding171_Excel_Sheet_Column_Number</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-171/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-171/</id>
    <published>2016-06-05T02:44:59.000Z</published>
    <updated>2016-06-05T13:20:01.019Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Related to question Excel Sheet Column Title&lt;/p&gt;
&lt;p&gt;Given a column title as appear in an Excel sheet, return its corresponding column number.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;A -&amp;gt; 1
B -&amp;gt; 2
C -&amp;gt; 3
...
Z -&amp;gt; 26
AA -&amp;gt; 27
AB -&amp;gt; 28 
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Math" scheme="http://seifzhang.jerrychia.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Coding170_***</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-170/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-170/</id>
    <published>2016-06-05T02:42:59.000Z</published>
    <updated>2016-06-05T13:19:17.125Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.&lt;/p&gt;
&lt;p&gt;You may assume that the array is non-empty and the majority element always exist in the array.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
      <category term="Divide and Conquer" scheme="http://seifzhang.jerrychia.com/tags/Divide-and-Conquer/"/>
    
      <category term="Bit Manipulation" scheme="http://seifzhang.jerrychia.com/tags/Bit-Manipulation/"/>
    
  </entry>
  
  <entry>
    <title>Coding169_Majority_Element</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-169/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-169/</id>
    <published>2016-06-05T02:40:59.000Z</published>
    <updated>2016-06-05T13:18:38.471Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.&lt;/p&gt;
&lt;p&gt;You may assume that the array is non-empty and the majority element always exist in the array.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
      <category term="Divide and Conquer" scheme="http://seifzhang.jerrychia.com/tags/Divide-and-Conquer/"/>
    
      <category term="Bit Manipulation" scheme="http://seifzhang.jerrychia.com/tags/Bit-Manipulation/"/>
    
  </entry>
  
  <entry>
    <title>Coding168_Excel_Sheet_Column_Title</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-168/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-168/</id>
    <published>2016-06-05T02:38:59.000Z</published>
    <updated>2016-06-05T13:18:13.476Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Given a positive integer, return its corresponding column title as appear in an Excel sheet.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 -&amp;gt; A
2 -&amp;gt; B
3 -&amp;gt; C
...
26 -&amp;gt; Z
27 -&amp;gt; AA
28 -&amp;gt; AB 
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Math" scheme="http://seifzhang.jerrychia.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Coding165_Compare_Version_Numbers</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-165/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-165/</id>
    <published>2016-06-05T02:36:59.000Z</published>
    <updated>2016-06-05T13:17:14.928Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Compare two version numbers version1 and version2.&lt;br&gt;If version1 &amp;gt; version2 return 1, if version1 &amp;lt; version2 return -1, otherwise return 0.&lt;/p&gt;
&lt;p&gt;You may assume that the version strings are non-empty and contain only digits and the . character.&lt;br&gt;The . character does not represent a decimal point and is used to separate number sequences.&lt;br&gt;For instance, 2.5 is not “two and a half” or “half way to version three”, it is the fifth second-level revision of the second first-level revision.&lt;/p&gt;
&lt;p&gt;Here is an example of version numbers ordering:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0.1 &amp;lt; 1.1 &amp;lt; 1.2 &amp;lt; 13.37
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="String" scheme="http://seifzhang.jerrychia.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Coding160_Intersection_of_Two_Linked_Lists</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-160/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-160/</id>
    <published>2016-06-05T02:34:59.000Z</published>
    <updated>2016-06-05T13:15:42.980Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Write a program to find the node at which the intersection of two singly linked lists begins.&lt;/p&gt;
&lt;p&gt;For example, the following two linked lists:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A:          a1 → a2
                   ↘
                     c1 → c2 → c3
                   ↗            
B:     b1 → b2 → b3
begin to intersect at node c1.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the two linked lists have no intersection at all, return null.&lt;/li&gt;
&lt;li&gt;The linked lists must retain their original structure after the function returns.&lt;/li&gt;
&lt;li&gt;You may assume there are no cycles anywhere in the entire linked structure.&lt;/li&gt;
&lt;li&gt;Your code should preferably run in O(n) time and use only O(1) memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Linked List" scheme="http://seifzhang.jerrychia.com/tags/Linked-List/"/>
    
  </entry>
  
  <entry>
    <title>Coding157_***</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-157/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-157/</id>
    <published>2016-06-05T02:32:59.000Z</published>
    <updated>2016-06-05T13:13:06.065Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have exactly one solution.&lt;br&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given nums = [2, 7, 11, 15], target = 9,&lt;/p&gt;
&lt;p&gt;Because nums[0] + nums[1] = 2 + 7 = 9,&lt;br&gt;return [0, 1].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;两数相加得一个特定数，返回两数的索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
      <category term="Hash Table" scheme="http://seifzhang.jerrychia.com/tags/Hash-Table/"/>
    
  </entry>
  
  <entry>
    <title>Coding155_Min_Stack</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-155/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-155/</id>
    <published>2016-06-05T02:30:59.000Z</published>
    <updated>2016-06-05T13:12:32.890Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push(x) – Push element x onto stack.&lt;/li&gt;
&lt;li&gt;pop() – Removes the element on top of the stack.&lt;/li&gt;
&lt;li&gt;top() – Get the top element.&lt;/li&gt;
&lt;li&gt;getMin() – Retrieve the minimum element in the stack.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --&amp;gt; Returns -3.
minStack.pop();
minStack.top();      --&amp;gt; Returns 0.
minStack.getMin();   --&amp;gt; Returns -2.
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public int[] twoSum(int[] nums, int target) {
          for (int i = 0; i &amp;lt; nums.length; i++) {
            for (int j = i + 1; j &amp;lt; nums.length; j++) {
                if ((nums[i] + nums[j]) == target) {
                    return new int[] { i, j };
                }
            }
        }
    return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Stack" scheme="http://seifzhang.jerrychia.com/tags/Stack/"/>
    
      <category term="Design" scheme="http://seifzhang.jerrychia.com/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>Coding141_Linked_List_Cycle</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-141/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-141/</id>
    <published>2016-06-05T02:28:59.000Z</published>
    <updated>2016-06-16T01:26:53.436Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Given a linked list, determine if it has a cycle in it.&lt;/p&gt;
&lt;p&gt;Follow up:&lt;br&gt;Can you solve it without using extra space?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;给定链表，判断是否存在环&lt;br&gt;不要用额外的空间来解决问题&lt;br&gt;复杂度O(n^2)的方法:使用两个指针a, b。a从表头开始一步一步往前走，遇到null则说明没有环，返回false；a每走一步，b从头开始走，如果遇到b==a.next，则说明有环true，如果遇到b==a，则说明暂时没有环，继续循环。&lt;/p&gt;
&lt;p&gt;复杂度O(n)的方法:使用两个指针slow,fast。两个指针都从表头开始走，slow每次走一步，fast每次走两步，如果fast遇到null，则说明没有环，返回false；如果slow==fast，说明有环，并且此时fast超了slow一圈，返回true。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;**注意：&lt;/em&gt;为什么有环的情况下二者一定会相遇呢？因为fast先进入环，在slow进入之后，如果把slow看作在前面，fast在后面每次循环都向slow靠近1，所以一定会相遇，而不会出现fast直接跳过slow的情况。&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/hiddenfox/p/3408931.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if (head == null || head.next == null) {
                return false;
            }
            ListNode fast = head.next;
            ListNode slow = head;
            while (fast != null &amp;amp;&amp;amp; fast.next != null) {
                if (fast == slow) {
                    return true;
                }
                fast = fast.next.next;
                slow = slow.next;
            }
            return false;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Two Pointers" scheme="http://seifzhang.jerrychia.com/tags/Two-Pointers/"/>
    
      <category term="Linked List" scheme="http://seifzhang.jerrychia.com/tags/Linked-List/"/>
    
  </entry>
  
  <entry>
    <title>Coding125_Valid_Palindrome</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-125/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-125/</id>
    <published>2016-06-05T02:26:59.000Z</published>
    <updated>2016-06-16T00:55:34.586Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.&lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;“A man, a plan, a canal: Panama” is a palindrome.&lt;br&gt;“race a car” is not a palindrome.&lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;Have you consider that the string might be empty? This is a good question to ask during an interview.&lt;/p&gt;
&lt;p&gt;For the purpose of this problem, we define empty string as valid palindrome.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;给定一个字符串，判定是否是回文，只考虑字母数字字符，忽略例子给出的情况。&lt;br&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;如果字符串为空，则是一个有效的回文。&lt;br&gt;“As202sA”—–true&lt;br&gt;“A0”———-false&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public boolean isPalindrome(String s) {
       boolean flag = true;
        if (s == null) {
            flag = true;
        }//不要
        s = s.toLowerCase();//把大写变小写
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i &amp;lt; s.length(); i++) {//去掉与数字字母无关的字符
            if ((s.charAt(i) &amp;gt;= &amp;apos;a&amp;apos; &amp;amp;&amp;amp; s.charAt(i) &amp;lt;= &amp;apos;z&amp;apos;)||(s.charAt(i) &amp;gt;= &amp;apos;0&amp;apos; &amp;amp;&amp;amp; s.charAt(i) &amp;lt;= &amp;apos;9&amp;apos;)) 
            {
                sb.append(s.charAt(i));
            }
        }
        String s1 = sb.toString();
        for (int i = 0, j = s1.length() - 1; i &amp;lt; s1.length() / 2; i++, j--) {
            if (s1.charAt(i) != s1.charAt(j)) {
                flag = false;
            }
        }
        return flag;

    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Two Pointers" scheme="http://seifzhang.jerrychia.com/tags/Two-Pointers/"/>
    
      <category term="String" scheme="http://seifzhang.jerrychia.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Coding121_Best_Time_to_Buy_and_Sell_Stock</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-121/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-121/</id>
    <published>2016-06-05T02:24:59.000Z</published>
    <updated>2016-06-05T12:02:17.417Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Say you have an array for which the ith element is the price of a given stock on day i.&lt;/p&gt;
&lt;p&gt;If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
      <category term="Dynamic Programming" scheme="http://seifzhang.jerrychia.com/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Coding119_Pascal&#39;s_Triangle_II</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-119/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-119/</id>
    <published>2016-06-05T02:22:59.000Z</published>
    <updated>2016-06-15T14:08:51.148Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Given an index k, return the kth row of the Pascal’s triangle.&lt;/p&gt;
&lt;p&gt;For example, given k = 3,&lt;br&gt;Return [1,3,3,1].&lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;Could you optimize your algorithm to use only O(k) extra space?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public List&amp;lt;Integer&amp;gt; getRow(int rowIndex) {
        List&amp;lt;Integer&amp;gt; currow = null;// 定义当前行
        List&amp;lt;Integer&amp;gt; prerow = null;// 定义上一行
        for (int i = 0; i &amp;lt;= rowIndex; i++) {
            currow = new ArrayList&amp;lt;&amp;gt;();
            for (int j = 0; j &amp;lt;= i; j++) {
                currow.add(j == 0 || i == j ? 1 : prerow.get(j) + prerow.get(j - 1));// 当前行是根据上一行得出来的
            }
            prerow = currow;
        }
        return currow;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Coding118_Pascal&#39;s_Triangle</title>
    <link href="http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-118/"/>
    <id>http://seifzhang.jerrychia.com/2016/06/05/leetCode-OJ-118/</id>
    <published>2016-06-05T02:20:59.000Z</published>
    <updated>2016-06-16T00:27:02.937Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/h2&gt;&lt;p&gt;Given numRows, generate the first numRows of Pascal’s triangle.&lt;/p&gt;
&lt;p&gt;For example, given numRows = 5,&lt;br&gt;Return&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;My-Algorithm&quot;&gt;&lt;a href=&quot;#My-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;My Algorithm&quot;&gt;&lt;/a&gt;My Algorithm&lt;/h2&gt;&lt;h3 id=&quot;idea&quot;&gt;&lt;a href=&quot;#idea&quot; class=&quot;headerlink&quot; title=&quot;idea:&quot;&gt;&lt;/a&gt;idea:&lt;/h3&gt;&lt;hr&gt;
&lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code:&quot;&gt;&lt;/a&gt;code:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;public class Solution {
    public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; generate(int numRows) {
        List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; ret = new ArrayList&amp;lt;&amp;gt;();
        if (numRows == 0) {
            return ret;
        }
        List&amp;lt;Integer&amp;gt; l = new ArrayList&amp;lt;&amp;gt;();
        l.add(1);
        ret.add(l);
        for (int i = 1; i &amp;lt; numRows; i++) {
            List&amp;lt;Integer&amp;gt; uprow = ret.get(i - 1);
            List&amp;lt;Integer&amp;gt; clow = new ArrayList&amp;lt;&amp;gt;();
            clow.add(1);// 左边的1放入进去
            for (int j = 0; j &amp;lt; uprow.size(); j++) {
                if (j == uprow.size() - 1) {
                    clow.add(1);// 如果是每一行的最后，就放1，即把右边的1放入
                } else {
                    clow.add(uprow.get(j) + uprow.get(j + 1));
                }
            }
            ret.add(clow);
        }
        return ret;
    }
}
//与第119题一致的解法
public class Solution {
    public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; generate(int numRows) {
          List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; ret = new ArrayList&amp;lt;&amp;gt;();
        if (numRows == 0) {
            return ret;
        }
        List&amp;lt;Integer&amp;gt; currow = null;// 定义当前行
        List&amp;lt;Integer&amp;gt; prerow = null;// 定义上一行
        for (int i = 0; i &amp;lt;numRows; i++) {
            currow = new ArrayList&amp;lt;&amp;gt;();
            for (int j = 0; j &amp;lt;= i; j++) {
                currow.add(j == 0 || i == j ? 1 : prerow.get(j) + prerow.get(j - 1));// 当前行是根据上一行得出来的
            }
            ret.add(currow);
            prerow = currow;
        }
        return ret;
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Algorithm-Description&quot;&gt;&lt;a href=&quot;#Algorithm-Description&quot; class=&quot;headerlink&quot; title=&quot;Algorithm Description&quot;&gt;&lt;/a&gt;Algorithm Description&lt;/
    
    </summary>
    
      <category term="LeetCode" scheme="http://seifzhang.jerrychia.com/categories/LeetCode/"/>
    
    
      <category term="Array" scheme="http://seifzhang.jerrychia.com/tags/Array/"/>
    
  </entry>
  
</feed>
